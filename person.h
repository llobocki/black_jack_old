/*
   Boost Software License - Version 1.0 - August 17th, 2003

   Permission is hereby granted, free of charge, to any person or organization
   obtaining a copy of the software and accompanying documentation covered by
   this license (the "Software") to use, reproduce, display, distribute,
   execute, and transmit the Software, and to prepare derivative works of the
   Software, and to permit third-parties to whom the Software is furnished to
   do so, all subject to the following:

   The copyright notices in the Software and this entire statement, including
   the above license grant, this restriction and the following disclaimer,
   must be included in all copies of the Software, in whole or in part, and
   all derivative works of the Software, unless such copies or derivative
   works are solely in the form of machine-executable object code generated by
   a source language processor.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
   SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
   FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
*/


#ifndef PERSON_H
#define PERSON_H

#include "card.h"
#include "vector"
// #include "option.h"

class Person
{
private:
    std::vector<Card> cards;
    int value;
//     int two_cards;

    int split;
    
    bool black_jack;
    bool soft_ace;

public:
    Person();
//     virtual ~Person();

    int get_cards() const;
    bool get_black_jack() const;
   
    void only_21();
   
//     void check_black_jack();
    void reset();

    virtual void add(const Card card);

    virtual void print();

    bool can_split();
    bool split_aces();
    
    int get_size() const;
    
    void set_split();
    int get_split() const;
    
    Card back_card();
    
    

};

#endif // PERSON_H
